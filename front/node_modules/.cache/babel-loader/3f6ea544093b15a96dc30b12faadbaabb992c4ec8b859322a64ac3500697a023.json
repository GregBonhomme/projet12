{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport mock from \"public/data/mockup.json\";\nfunction normalise(input) {\n  const id = input[0].data.id;\n  const keyData = input[0].data.keyData;\n  const infos = input[0].data.userInfos;\n  let score = 0;\n  input[0].data.todayScore ? score = input[0].data.todayScore : score = input[0].data.score;\n  const perfs = input[3].data;\n  const average = input[2].data.sessions;\n  const activity = input[1].data.sessions;\n  return {\n    id,\n    keyData,\n    infos,\n    score,\n    perfs,\n    average,\n    activity\n  };\n}\nfunction useMock(userId) {\n  _s();\n  const [profile, setProfile] = useState([]);\n  useEffect(() => {\n    const fetchData = () => {\n      try {\n        const data = mock.filter(elem => elem.id === userId);\n        setProfile(data);\n      } catch {\n        throw Error(\"L'utilisateur n'a pas été trouvé\");\n      }\n    };\n    fetchData();\n  }, []);\n  return normalise(profile);\n}\n_s(useMock, \"N6YYD9ODp0cfru7rNOcTHSSQ4y4=\");\nexport default useMock;","map":{"version":3,"names":["useState","useEffect","mock","normalise","input","id","data","keyData","infos","userInfos","score","todayScore","perfs","average","sessions","activity","useMock","userId","_s","profile","setProfile","fetchData","filter","elem","Error"],"sources":["C:/Users/grego/Documents/temp/OpenClassroom/projet12/front/src/utils/service/useMock/index.jsx"],"sourcesContent":["import { useState,useEffect } from \"react\";\r\nimport mock from \"public/data/mockup.json\"\r\n\r\nfunction normalise (input) {\r\n\r\n    const id = input[0].data.id\r\n    const keyData = input[0].data.keyData\r\n    const infos = input[0].data.userInfos\r\n    let score = 0\r\n    input[0].data.todayScore ? (score = input[0].data.todayScore) : (score = input[0].data.score)\r\n    const perfs = input[3].data\r\n    const average = input[2].data.sessions\r\n    const activity = input[1].data.sessions\r\n\r\n    return {id,keyData,infos,score,perfs,average,activity}\r\n}\r\n\r\nfunction useMock (userId) {\r\n\r\n    const [profile,setProfile] = useState([])\r\n\r\n    useEffect (() => {\r\n        const fetchData = () => {\r\n            try {\r\n                const data = mock.filter((elem)=> elem.id === userId)\r\n            setProfile(data)\r\n            } catch {\r\n                throw Error(\"L'utilisateur n'a pas été trouvé\")\r\n            }\r\n        }\r\n        fetchData()\r\n    },[])\r\n    return normalise(profile)\r\n}\r\n\r\nexport default useMock"],"mappings":";AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,OAAOC,IAAI,MAAM,yBAAyB;AAE1C,SAASC,SAASA,CAAEC,KAAK,EAAE;EAEvB,MAAMC,EAAE,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CAACD,EAAE;EAC3B,MAAME,OAAO,GAAGH,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CAACC,OAAO;EACrC,MAAMC,KAAK,GAAGJ,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CAACG,SAAS;EACrC,IAAIC,KAAK,GAAG,CAAC;EACbN,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CAACK,UAAU,GAAID,KAAK,GAAGN,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CAACK,UAAU,GAAKD,KAAK,GAAGN,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CAACI,KAAM;EAC7F,MAAME,KAAK,GAAGR,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI;EAC3B,MAAMO,OAAO,GAAGT,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CAACQ,QAAQ;EACtC,MAAMC,QAAQ,GAAGX,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CAACQ,QAAQ;EAEvC,OAAO;IAACT,EAAE;IAACE,OAAO;IAACC,KAAK;IAACE,KAAK;IAACE,KAAK;IAACC,OAAO;IAACE;EAAQ,CAAC;AAC1D;AAEA,SAASC,OAAOA,CAAEC,MAAM,EAAE;EAAAC,EAAA;EAEtB,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEzCC,SAAS,CAAE,MAAM;IACb,MAAMoB,SAAS,GAAGA,CAAA,KAAM;MACpB,IAAI;QACA,MAAMf,IAAI,GAAGJ,IAAI,CAACoB,MAAM,CAAEC,IAAI,IAAIA,IAAI,CAAClB,EAAE,KAAKY,MAAM,CAAC;QACzDG,UAAU,CAACd,IAAI,CAAC;MAChB,CAAC,CAAC,MAAM;QACJ,MAAMkB,KAAK,CAAC,kCAAkC,CAAC;MACnD;IACJ,CAAC;IACDH,SAAS,CAAC,CAAC;EACf,CAAC,EAAC,EAAE,CAAC;EACL,OAAOlB,SAAS,CAACgB,OAAO,CAAC;AAC7B;AAACD,EAAA,CAhBQF,OAAO;AAkBhB,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}