{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nfunction normalise(data) {\n  const id = data.profile.id;\n  const keyData = data.profile.keyData;\n  const infos = data.profile.userInfos;\n  let score = 0;\n  data.profile.todayScore ? score = data.profile.todayScore : score = data.profile.score;\n  const perfs = data.perf;\n  const average = data.average.sessions;\n  const activity = data.activity.sessions;\n  return {\n    id,\n    keyData,\n    infos,\n    score,\n    perfs,\n    average,\n    activity\n  };\n}\nfunction useFetch(userId) {\n  _s();\n  const [isLoading, setLoading] = useState(true);\n  const [profile, setProfile] = useState([]);\n  const [activity, setActivity] = useState([]);\n  const [average, setAverage] = useState([]);\n  const [perf, setPerf] = useState([]);\n  const temp = [];\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await Promise.all([fetch(\"http://localhost:3000/user/\" + userId), fetch(\"http://localhost:3000/user/\" + userId + \"/activity\"), fetch(\"http://localhost:3000/user/\" + userId + \"/average-sessions\"), fetch(\"http://localhost:3000/user/\" + userId + \"/performance\")]);\n        const data = await Promise.all(res.map(r => r.json()));\n        console.log(data);\n      } catch {\n        throw Error(\"Promise failed\");\n      }\n    };\n    fetchData();\n  }, []);\n  return {\n    isLoading,\n    profile,\n    activity,\n    average,\n    perf\n  };\n}\n_s(useFetch, \"Bpxa/zAei/xKFZlHaEd4N0msiiA=\");\nexport default useFetch;\n\n/*\r\n.then(temp => setActivity(temp[1].data))\r\n            .then(temp => setAverage(temp[2].data))\r\n            .then(temp => setPerf(temp[3].data))\r\n\r\n\r\n            .then((temp) => setProfile(Promise.resolve(temp[0])))\r\n            .then((temp) => setActivity(Promise.resolve(temp[1])))\r\n            .then((temp) => setAverage(Promise.resolve(temp[2])))\r\n            .then((temp) => setPerf(Promise.resolve(temp[3])))\r\n*/","map":{"version":3,"names":["useState","useEffect","normalise","data","id","profile","keyData","infos","userInfos","score","todayScore","perfs","perf","average","sessions","activity","useFetch","userId","_s","isLoading","setLoading","setProfile","setActivity","setAverage","setPerf","temp","fetchData","res","Promise","all","fetch","map","r","json","console","log","Error"],"sources":["C:/Users/grego/Documents/temp/OpenClassroom/projet12/front/src/utils/service/useFetch/index.jsx"],"sourcesContent":["import { useState,useEffect } from \"react\";\r\n\r\nfunction normalise (data) {\r\n\r\n    const id = data.profile.id\r\n    const keyData = data.profile.keyData\r\n    const infos = data.profile.userInfos\r\n    let score = 0\r\n    data.profile.todayScore ? (score = data.profile.todayScore) : (score = data.profile.score)\r\n    const perfs = data.perf\r\n    const average = data.average.sessions\r\n    const activity = data.activity.sessions\r\n\r\n    return {id,keyData,infos,score,perfs,average,activity}\r\n}\r\n\r\nfunction useFetch (userId) {\r\n    const [isLoading,setLoading] = useState(true)\r\n    const [profile,setProfile] = useState([])\r\n    const [activity,setActivity] = useState([])\r\n    const [average,setAverage] = useState([])\r\n    const [perf,setPerf] = useState([])\r\n    const temp = []\r\n\r\n    useEffect (() => {\r\n        \r\n        const fetchData = async () => {\r\n            try {\r\n                const res = await Promise.all([\r\n                    fetch(\"http://localhost:3000/user/\"+ userId),\r\n                    fetch(\"http://localhost:3000/user/\"+ userId +\"/activity\"),\r\n                    fetch(\"http://localhost:3000/user/\"+ userId +\"/average-sessions\"),\r\n                    fetch(\"http://localhost:3000/user/\"+ userId +\"/performance\")\r\n                ])\r\n                const data = await Promise.all(res.map(r => r.json()))\r\n                console.log(data)\r\n            } catch {\r\n                throw Error(\"Promise failed\")\r\n            }\r\n        }\r\n        fetchData()\r\n        },[])\r\n\r\n    return {isLoading,profile,activity,average,perf}\r\n}\r\n\r\nexport default useFetch\r\n\r\n/*\r\n.then(temp => setActivity(temp[1].data))\r\n            .then(temp => setAverage(temp[2].data))\r\n            .then(temp => setPerf(temp[3].data))\r\n\r\n\r\n            .then((temp) => setProfile(Promise.resolve(temp[0])))\r\n            .then((temp) => setActivity(Promise.resolve(temp[1])))\r\n            .then((temp) => setAverage(Promise.resolve(temp[2])))\r\n            .then((temp) => setPerf(Promise.resolve(temp[3])))\r\n*/"],"mappings":";AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAE1C,SAASC,SAASA,CAAEC,IAAI,EAAE;EAEtB,MAAMC,EAAE,GAAGD,IAAI,CAACE,OAAO,CAACD,EAAE;EAC1B,MAAME,OAAO,GAAGH,IAAI,CAACE,OAAO,CAACC,OAAO;EACpC,MAAMC,KAAK,GAAGJ,IAAI,CAACE,OAAO,CAACG,SAAS;EACpC,IAAIC,KAAK,GAAG,CAAC;EACbN,IAAI,CAACE,OAAO,CAACK,UAAU,GAAID,KAAK,GAAGN,IAAI,CAACE,OAAO,CAACK,UAAU,GAAKD,KAAK,GAAGN,IAAI,CAACE,OAAO,CAACI,KAAM;EAC1F,MAAME,KAAK,GAAGR,IAAI,CAACS,IAAI;EACvB,MAAMC,OAAO,GAAGV,IAAI,CAACU,OAAO,CAACC,QAAQ;EACrC,MAAMC,QAAQ,GAAGZ,IAAI,CAACY,QAAQ,CAACD,QAAQ;EAEvC,OAAO;IAACV,EAAE;IAACE,OAAO;IAACC,KAAK;IAACE,KAAK;IAACE,KAAK;IAACE,OAAO;IAACE;EAAQ,CAAC;AAC1D;AAEA,SAASC,QAAQA,CAAEC,MAAM,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAACC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC7C,MAAM,CAACK,OAAO,EAACgB,UAAU,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACe,QAAQ,EAACO,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACa,OAAO,EAACU,UAAU,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACY,IAAI,EAACY,OAAO,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAMyB,IAAI,GAAG,EAAE;EAEfxB,SAAS,CAAE,MAAM;IAEb,MAAMyB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC1BC,KAAK,CAAC,6BAA6B,GAAEb,MAAM,CAAC,EAC5Ca,KAAK,CAAC,6BAA6B,GAAEb,MAAM,GAAE,WAAW,CAAC,EACzDa,KAAK,CAAC,6BAA6B,GAAEb,MAAM,GAAE,mBAAmB,CAAC,EACjEa,KAAK,CAAC,6BAA6B,GAAEb,MAAM,GAAE,cAAc,CAAC,CAC/D,CAAC;QACF,MAAMd,IAAI,GAAG,MAAMyB,OAAO,CAACC,GAAG,CAACF,GAAG,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;QACtDC,OAAO,CAACC,GAAG,CAAChC,IAAI,CAAC;MACrB,CAAC,CAAC,MAAM;QACJ,MAAMiC,KAAK,CAAC,gBAAgB,CAAC;MACjC;IACJ,CAAC;IACDV,SAAS,CAAC,CAAC;EACX,CAAC,EAAC,EAAE,CAAC;EAET,OAAO;IAACP,SAAS;IAACd,OAAO;IAACU,QAAQ;IAACF,OAAO;IAACD;EAAI,CAAC;AACpD;AAACM,EAAA,CA5BQF,QAAQ;AA8BjB,eAAeA,QAAQ;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}