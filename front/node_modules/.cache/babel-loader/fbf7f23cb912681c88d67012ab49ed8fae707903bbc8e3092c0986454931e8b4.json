{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nfunction normalise(data) {\n  const id = data.profile.id;\n  const keyData = data.profile.keyData;\n  const infos = data.profile.userInfos;\n  let score = 0;\n  data.profile.todayScore ? score = data.profile.todayScore : score = data.profile.score;\n  const perfs = data.perf;\n  const average = data.average.sessions;\n  const activity = data.activity.sessions;\n  return {\n    id,\n    keyData,\n    infos,\n    score,\n    perfs,\n    average,\n    activity\n  };\n}\nfunction useFetch(userId) {\n  _s();\n  const [isLoading, setLoading] = useState(true);\n  const [profile, setProfile] = useState([]);\n  const [activity, setActivity] = useState([]);\n  const [average, setAverage] = useState([]);\n  const [perf, setPerf] = useState([]);\n  useEffect(() => {\n    if (!userId) {\n      setLoading(true);\n    }\n    const promise1 = fetch(\"http://localhost:3000/user/\" + userId);\n    const promise2 = fetch(\"http://localhost:3000/user/\" + userId + \"/activity\");\n    const promise3 = fetch(\"http://localhost:3000/user/\" + userId + \"/average-sessions\");\n    const promise4 = fetch(\"http://localhost:3000/user/\" + userId + \"/performance\");\n    Promise.all([promise1, promise2, promise3, promise4]).then(res => res.map(r => r.json)).then(temp => {\n      setProfile(temp.data);\n    }).then(console.log(profile));\n  }, []);\n  return [];\n}\n_s(useFetch, \"Bpxa/zAei/xKFZlHaEd4N0msiiA=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","normalise","data","id","profile","keyData","infos","userInfos","score","todayScore","perfs","perf","average","sessions","activity","useFetch","userId","_s","isLoading","setLoading","setProfile","setActivity","setAverage","setPerf","promise1","fetch","promise2","promise3","promise4","Promise","all","then","res","map","r","json","temp","console","log"],"sources":["C:/Users/grego/Documents/temp/OpenClassroom/projet12/front/src/utils/service/useFetch/index.jsx"],"sourcesContent":["import { useState,useEffect } from \"react\";\r\n\r\nfunction normalise (data) {\r\n\r\n    const id = data.profile.id\r\n    const keyData = data.profile.keyData\r\n    const infos = data.profile.userInfos\r\n    let score = 0\r\n    data.profile.todayScore ? (score = data.profile.todayScore) : (score = data.profile.score)\r\n    const perfs = data.perf\r\n    const average = data.average.sessions\r\n    const activity = data.activity.sessions\r\n\r\n    return {id,keyData,infos,score,perfs,average,activity}\r\n}\r\n\r\nfunction useFetch (userId) {\r\n    const [isLoading,setLoading] = useState(true)\r\n    const [profile,setProfile] = useState([])\r\n    const [activity,setActivity] = useState([])\r\n    const [average,setAverage] = useState([])\r\n    const [perf,setPerf] = useState([])\r\n\r\n    useEffect (() => {\r\n        if (!userId) {\r\n            setLoading(true)\r\n        }\r\n            const promise1 = fetch(\"http://localhost:3000/user/\"+ userId)\r\n            const promise2 = fetch(\"http://localhost:3000/user/\"+ userId +\"/activity\")\r\n            const promise3 = fetch(\"http://localhost:3000/user/\"+ userId +\"/average-sessions\")\r\n            const promise4 = fetch(\"http://localhost:3000/user/\"+ userId +\"/performance\")\r\n            \r\n            Promise.all([promise1,promise2,promise3,promise4])\r\n            .then((res) => res.map((r)=>r.json))\r\n            .then((temp) => {setProfile(temp.data)})\r\n            .then(console.log(profile))\r\n        },[])\r\n\r\n    return []\r\n}\r\n\r\nexport default useFetch"],"mappings":";AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAE1C,SAASC,SAASA,CAAEC,IAAI,EAAE;EAEtB,MAAMC,EAAE,GAAGD,IAAI,CAACE,OAAO,CAACD,EAAE;EAC1B,MAAME,OAAO,GAAGH,IAAI,CAACE,OAAO,CAACC,OAAO;EACpC,MAAMC,KAAK,GAAGJ,IAAI,CAACE,OAAO,CAACG,SAAS;EACpC,IAAIC,KAAK,GAAG,CAAC;EACbN,IAAI,CAACE,OAAO,CAACK,UAAU,GAAID,KAAK,GAAGN,IAAI,CAACE,OAAO,CAACK,UAAU,GAAKD,KAAK,GAAGN,IAAI,CAACE,OAAO,CAACI,KAAM;EAC1F,MAAME,KAAK,GAAGR,IAAI,CAACS,IAAI;EACvB,MAAMC,OAAO,GAAGV,IAAI,CAACU,OAAO,CAACC,QAAQ;EACrC,MAAMC,QAAQ,GAAGZ,IAAI,CAACY,QAAQ,CAACD,QAAQ;EAEvC,OAAO;IAACV,EAAE;IAACE,OAAO;IAACC,KAAK;IAACE,KAAK;IAACE,KAAK;IAACE,OAAO;IAACE;EAAQ,CAAC;AAC1D;AAEA,SAASC,QAAQA,CAAEC,MAAM,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAACC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC7C,MAAM,CAACK,OAAO,EAACgB,UAAU,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACe,QAAQ,EAACO,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACa,OAAO,EAACU,UAAU,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACY,IAAI,EAACY,OAAO,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAEnCC,SAAS,CAAE,MAAM;IACb,IAAI,CAACgB,MAAM,EAAE;MACTG,UAAU,CAAC,IAAI,CAAC;IACpB;IACI,MAAMK,QAAQ,GAAGC,KAAK,CAAC,6BAA6B,GAAET,MAAM,CAAC;IAC7D,MAAMU,QAAQ,GAAGD,KAAK,CAAC,6BAA6B,GAAET,MAAM,GAAE,WAAW,CAAC;IAC1E,MAAMW,QAAQ,GAAGF,KAAK,CAAC,6BAA6B,GAAET,MAAM,GAAE,mBAAmB,CAAC;IAClF,MAAMY,QAAQ,GAAGH,KAAK,CAAC,6BAA6B,GAAET,MAAM,GAAE,cAAc,CAAC;IAE7Ea,OAAO,CAACC,GAAG,CAAC,CAACN,QAAQ,EAACE,QAAQ,EAACC,QAAQ,EAACC,QAAQ,CAAC,CAAC,CACjDG,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,GAAG,CAAEC,CAAC,IAAGA,CAAC,CAACC,IAAI,CAAC,CAAC,CACnCJ,IAAI,CAAEK,IAAI,IAAK;MAAChB,UAAU,CAACgB,IAAI,CAAClC,IAAI,CAAC;IAAA,CAAC,CAAC,CACvC6B,IAAI,CAACM,OAAO,CAACC,GAAG,CAAClC,OAAO,CAAC,CAAC;EAC/B,CAAC,EAAC,EAAE,CAAC;EAET,OAAO,EAAE;AACb;AAACa,EAAA,CAvBQF,QAAQ;AAyBjB,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}