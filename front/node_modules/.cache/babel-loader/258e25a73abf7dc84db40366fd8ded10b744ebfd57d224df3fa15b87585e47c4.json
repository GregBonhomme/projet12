{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nfunction normalise(input) {\n  const id = input.id;\n  const keyData = input.keyData;\n  const infos = input.infos;\n  let score = 0;\n  input.todayScore ? score = input.todayScore : score = input.score;\n  const perfs = input.perfs;\n  const average = input.average;\n  const activity = input.activity;\n  return {\n    id,\n    keyData,\n    infos,\n    score,\n    perfs,\n    average,\n    activity\n  };\n}\nfunction useMock(userId, url) {\n  _s();\n  const [profile, setProfile] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const src = await fetch(url);\n        let data = [];\n        src ? data = src.filter(e => e.id === userId) : data = [];\n        console.log(data);\n        setProfile(data);\n      } catch {\n        throw Error(\"L'utilisateur n'a pas été trouvé\");\n      }\n    };\n    userId && fetchData();\n  }, []);\n  return normalise(profile);\n}\n_s(useMock, \"N6YYD9ODp0cfru7rNOcTHSSQ4y4=\");\nexport default useMock;","map":{"version":3,"names":["useState","useEffect","normalise","input","id","keyData","infos","score","todayScore","perfs","average","activity","useMock","userId","url","_s","profile","setProfile","fetchData","src","fetch","data","filter","e","console","log","Error"],"sources":["C:/Users/grego/Documents/temp/OpenClassroom/projet12/front/src/utils/service/useMock/index.jsx"],"sourcesContent":["import { useState,useEffect } from \"react\";\r\n\r\nfunction normalise (input) {\r\n\r\n    const id = input.id\r\n    const keyData = input.keyData\r\n    const infos = input.infos\r\n    let score = 0\r\n    input.todayScore ? (score = input.todayScore) : (score = input.score)\r\n    const perfs = input.perfs\r\n    const average = input.average\r\n    const activity = input.activity\r\n\r\n    return {id,keyData,infos,score,perfs,average,activity}\r\n}\r\n\r\nfunction useMock (userId,url) {\r\n\r\n    const [profile,setProfile] = useState([])\r\n\r\n    useEffect (() => {\r\n        const fetchData = async() => {\r\n            try {\r\n                const src = await fetch(url)\r\n                let data = []\r\n                src ? (data = src.filter(e => e.id ===userId)) : data=[]\r\n                console.log(data)\r\n                setProfile(data)\r\n            } catch {\r\n                throw Error(\"L'utilisateur n'a pas été trouvé\")\r\n            }\r\n        }\r\n        userId && fetchData()\r\n    },[])\r\n    return normalise(profile)\r\n}\r\n\r\nexport default useMock"],"mappings":";AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAE1C,SAASC,SAASA,CAAEC,KAAK,EAAE;EAEvB,MAAMC,EAAE,GAAGD,KAAK,CAACC,EAAE;EACnB,MAAMC,OAAO,GAAGF,KAAK,CAACE,OAAO;EAC7B,MAAMC,KAAK,GAAGH,KAAK,CAACG,KAAK;EACzB,IAAIC,KAAK,GAAG,CAAC;EACbJ,KAAK,CAACK,UAAU,GAAID,KAAK,GAAGJ,KAAK,CAACK,UAAU,GAAKD,KAAK,GAAGJ,KAAK,CAACI,KAAM;EACrE,MAAME,KAAK,GAAGN,KAAK,CAACM,KAAK;EACzB,MAAMC,OAAO,GAAGP,KAAK,CAACO,OAAO;EAC7B,MAAMC,QAAQ,GAAGR,KAAK,CAACQ,QAAQ;EAE/B,OAAO;IAACP,EAAE;IAACC,OAAO;IAACC,KAAK;IAACC,KAAK;IAACE,KAAK;IAACC,OAAO;IAACC;EAAQ,CAAC;AAC1D;AAEA,SAASC,OAAOA,CAAEC,MAAM,EAACC,GAAG,EAAE;EAAAC,EAAA;EAE1B,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEzCC,SAAS,CAAE,MAAM;IACb,MAAMiB,SAAS,GAAG,MAAAA,CAAA,KAAW;MACzB,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACN,GAAG,CAAC;QAC5B,IAAIO,IAAI,GAAG,EAAE;QACbF,GAAG,GAAIE,IAAI,GAAGF,GAAG,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACnB,EAAE,KAAIS,MAAM,CAAC,GAAIQ,IAAI,GAAC,EAAE;QACxDG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;QACjBJ,UAAU,CAACI,IAAI,CAAC;MACpB,CAAC,CAAC,MAAM;QACJ,MAAMK,KAAK,CAAC,kCAAkC,CAAC;MACnD;IACJ,CAAC;IACDb,MAAM,IAAIK,SAAS,CAAC,CAAC;EACzB,CAAC,EAAC,EAAE,CAAC;EACL,OAAOhB,SAAS,CAACc,OAAO,CAAC;AAC7B;AAACD,EAAA,CAnBQH,OAAO;AAqBhB,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}