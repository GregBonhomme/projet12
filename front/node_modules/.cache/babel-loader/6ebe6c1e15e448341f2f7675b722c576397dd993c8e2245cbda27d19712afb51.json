{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nfunction normalise(input) {\n  const id = input[0].id;\n  const keyData = input[0].keyData;\n  const infos = input[0].infos;\n  let score = 0;\n  input.todayScore ? score = input[0].todayScore : score = input[0].score;\n  const perfs = input[0].perfs;\n  const average = input[0].average;\n  const activity = input[0].activity;\n  return {\n    id,\n    keyData,\n    infos,\n    score,\n    perfs,\n    average,\n    activity\n  };\n}\nfunction useMock(userId, url) {\n  _s();\n  const [profile, setProfile] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(url);\n        const src = await res.json();\n        console.log(src);\n        let data = src.filter(e => e.id == userId);\n        console.log(data);\n        setProfile(data);\n      } catch {\n        throw Error(\"L'utilisateur n'a pas été trouvé\");\n      }\n    };\n    userId && fetchData();\n  }, []);\n  return profile;\n}\n_s(useMock, \"otsYkU/BlID8pE25KteGCcN+DzM=\");\nexport default useMock;","map":{"version":3,"names":["useState","useEffect","normalise","input","id","keyData","infos","score","todayScore","perfs","average","activity","useMock","userId","url","_s","profile","setProfile","fetchData","res","fetch","src","json","console","log","data","filter","e","Error"],"sources":["C:/Users/grego/Documents/temp/OpenClassroom/projet12/front/src/utils/service/useMock/index.jsx"],"sourcesContent":["import { useState,useEffect } from \"react\";\r\n\r\nfunction normalise (input) {\r\n\r\n    const id = input[0].id\r\n    const keyData = input[0].keyData\r\n    const infos = input[0].infos\r\n    let score = 0\r\n    input.todayScore ? (score = input[0].todayScore) : (score = input[0].score)\r\n    const perfs = input[0].perfs\r\n    const average = input[0].average\r\n    const activity = input[0].activity\r\n\r\n    return {id,keyData,infos,score,perfs,average,activity}\r\n}\r\n\r\nfunction useMock (userId,url) {\r\n\r\n    const [profile,setProfile] = useState({})\r\n\r\n    useEffect (() => {\r\n        const fetchData = async() => {\r\n            try {\r\n                const res = await fetch(url)\r\n                const src = await res.json()\r\n                console.log(src)\r\n                let data = src.filter(e=>(e.id == userId))\r\n                console.log(data)\r\n                setProfile(data)\r\n            } catch {\r\n                throw Error(\"L'utilisateur n'a pas été trouvé\")\r\n            }\r\n        }\r\n        userId && fetchData()\r\n    },[])\r\n    return (profile)\r\n}\r\n\r\nexport default useMock"],"mappings":";AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAE1C,SAASC,SAASA,CAAEC,KAAK,EAAE;EAEvB,MAAMC,EAAE,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACC,EAAE;EACtB,MAAMC,OAAO,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACE,OAAO;EAChC,MAAMC,KAAK,GAAGH,KAAK,CAAC,CAAC,CAAC,CAACG,KAAK;EAC5B,IAAIC,KAAK,GAAG,CAAC;EACbJ,KAAK,CAACK,UAAU,GAAID,KAAK,GAAGJ,KAAK,CAAC,CAAC,CAAC,CAACK,UAAU,GAAKD,KAAK,GAAGJ,KAAK,CAAC,CAAC,CAAC,CAACI,KAAM;EAC3E,MAAME,KAAK,GAAGN,KAAK,CAAC,CAAC,CAAC,CAACM,KAAK;EAC5B,MAAMC,OAAO,GAAGP,KAAK,CAAC,CAAC,CAAC,CAACO,OAAO;EAChC,MAAMC,QAAQ,GAAGR,KAAK,CAAC,CAAC,CAAC,CAACQ,QAAQ;EAElC,OAAO;IAACP,EAAE;IAACC,OAAO;IAACC,KAAK;IAACC,KAAK;IAACE,KAAK;IAACC,OAAO;IAACC;EAAQ,CAAC;AAC1D;AAEA,SAASC,OAAOA,CAAEC,MAAM,EAACC,GAAG,EAAE;EAAAC,EAAA;EAE1B,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEzCC,SAAS,CAAE,MAAM;IACb,MAAMiB,SAAS,GAAG,MAAAA,CAAA,KAAW;MACzB,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACN,GAAG,CAAC;QAC5B,MAAMO,GAAG,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAC5BC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;QAChB,IAAII,IAAI,GAAGJ,GAAG,CAACK,MAAM,CAACC,CAAC,IAAGA,CAAC,CAACvB,EAAE,IAAIS,MAAO,CAAC;QAC1CU,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;QACjBR,UAAU,CAACQ,IAAI,CAAC;MACpB,CAAC,CAAC,MAAM;QACJ,MAAMG,KAAK,CAAC,kCAAkC,CAAC;MACnD;IACJ,CAAC;IACDf,MAAM,IAAIK,SAAS,CAAC,CAAC;EACzB,CAAC,EAAC,EAAE,CAAC;EACL,OAAQF,OAAO;AACnB;AAACD,EAAA,CApBQH,OAAO;AAsBhB,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}